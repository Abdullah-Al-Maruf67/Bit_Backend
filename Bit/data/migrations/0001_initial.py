# Generated by Django 5.1.4 on 2025-02-12 00:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha1_hash', models.CharField(help_text='SHA1 hash of the file content', max_length=40, unique=True)),
                ('file_size', models.PositiveIntegerField(help_text='Original file size in bytes')),
                ('compressed_data', models.BinaryField(help_text='zlib compressed file content')),
                ('compressed_size', models.PositiveIntegerField(help_text='Size of compressed data in bytes')),
                ('file_path', models.CharField(blank=True, help_text='Original file path', max_length=1024)),
            ],
            options={
                'verbose_name': 'File Blob',
                'verbose_name_plural': 'File Blobs',
                'ordering': ['-file_size'],
            },
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commit_hash', models.CharField(help_text='Unique commit hash identifier', max_length=40, unique=True)),
                ('author', models.CharField(help_text='Name of the commit author', max_length=200)),
                ('email', models.EmailField(help_text='Email of the commit author', max_length=254)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the commit was created')),
                ('message', models.TextField(help_text='Commit message')),
                ('blobs', models.ManyToManyField(help_text='Files included in this commit', related_name='commits', to='data.blob')),
                ('parent', models.ForeignKey(blank=True, help_text='Previous commit in history', null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.commit')),
            ],
            options={
                'verbose_name': 'Commit',
                'verbose_name_plural': 'Commits',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Repository name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Repository description')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the repository was created')),
                ('author', models.ForeignKey(help_text='Repository creator', on_delete=django.db.models.deletion.CASCADE, related_name='repositories', to=settings.AUTH_USER_MODEL)),
                ('commits', models.ManyToManyField(help_text='Commits in this repository', related_name='repositories', to='data.commit')),
            ],
            options={
                'verbose_name': 'Repository',
                'verbose_name_plural': 'Repositories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ShareableLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(help_text='Unique access token for the link', max_length=36, unique=True)),
                ('expiration', models.DateTimeField(help_text='When the link becomes invalid')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the link is currently valid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_links', to='data.repository')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
